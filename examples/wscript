#!/usr/bin/env python
# encoding: utf-8
#
#    This file is part of zmq-stream.
#
#    Copyright (c) 2023 Bernardo Fichera <bernardo.fichera@gmail.com>
#
#    Permission is hereby granted, free of charge, to any person obtaining a copy
#    of this software and associated documentation files (the "Software"), to deal
#    in the Software without restriction, including without limitation the rights
#    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#    copies of the Software, and to permit persons to whom the Software is
#    furnished to do so, subject to the following conditions:
#
#    The above copyright notice and this permission notice shall be included in all
#    copies or substantial portions of the Software.
#
#    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
#    SOFTWARE.

import os

required = {}
optional = {}


def options(opt):
    pass


def configure(cfg):
    pass


def build(bld):
    sources = []
    for _, _, filenames in os.walk(bld.path.abspath()):
        sources += [
            filename for filename in filenames if filename.endswith(('.cpp', '.cc'))]

    # Compile all the examples
    for example in sources:
        if example in required:
            if not set(required[example]).issubset(bld.env["libs"]):
                break

        bld.program(
            features="cxx",
            install_path=None,  # "${PREFIX}/bin",
            source=example,
            # includes=["../external/include", ".."],
            includes=[".."],
            uselib=bld.env["libs"],
            use=bld.env["libname"],
            # lib=['NatNet'],
            # libpath=['../src/external/lib/'],
            target=example[: len(example) - len(".cpp")],
        )
